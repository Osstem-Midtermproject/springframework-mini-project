<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.webapp.dao.ManagementDao">

  <resultMap id = "selectUserwithHospitalResultMap" type = "user">
	<!-- Type = "dto.Board"도 가능 -->
		<result column = "userid" property="userid"/>
		<result column = "uaddress" property="uaddress"/>
		<result column = "uname" property="uname"/>
		<result column = "UPHONENUMBER" property="uphonenumber"/>
		<result column = "UMEMBERSHIPDATE" property="umembershipdate"/>
		
		
		<association property="hospital" javaType="hospital">
			<result column = "hname" property="hname"/>
			<result column = "haddress" property="haddress"/>
			<result column = "hdln" property="hdln"/>
		</association>
	</resultMap>
	
   <select id="selectByUserId" parameterType="pager" resultMap="selectUserwithHospitalResultMap">
      
 select hdln, userid, uaddress, hname, uphonenumber, umembershipdate, uname
          from (
              select hdln, userid, uaddress, hname, uphonenumber, umembershipdate, uname
              from (
                  SELECT hdln, userid, uaddress, hname, uphonenumber, umembershipdate, uname
                  FROM users, hospital 
                  WHERE uaddress = haddress AND udln = hdln AND urole = 'ROLE_USER'
                   )
          where rownum &lt;= 5
          )
      where rownum &gt;= 1
   </select>
   
   <select id="count" resultType="int">
      select count(*)
      from users, hospital 
      WHERE uaddress = haddress AND udln = hdln
   </select>  
   
   <select id="deleteByHdln" resultType="int">
      DELETE FROM hospital
	  WHERE
	  hdln = #{hdln}
   </select>  
   
   <!-- 종속 제약에 의한 업데이트 제한 해결해야한다. -->
	 <update id="updateByHdln" parameterType="user">
		UPDATE users 
		SET  uname = #{uname}, uphonenumber=#{uphonenumber}, uaddress = #{uaddress}
		WHERE udln = #{udln}
	</update>
		
			<!-- CREATE OR REPLACE TRIGGER trg_update_information
		AFTER UPDATE OF uname ON users 
		FOR EACH ROW
		BEGIN
		    UPDATE hospital 
		    SET   haddress = :NEW.uaddress 
		    WHERE haddress = :OLD.uaddress
		END
		/ -->
		
		
		
		<!-- DROP TRIGGER trg_update_information -->
	
</mapper>